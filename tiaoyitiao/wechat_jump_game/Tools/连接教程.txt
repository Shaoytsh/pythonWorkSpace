
Clone this wiki locally

https://github.com/wangshub/wechat_jump_game.wiki.git
一、安卓手机或模拟器操作步骤
环境搭建
方法1. Windows 免添加配置 adb 环境变量方式
注意：如果你不想在 windows 下面配置 adb，也可以使用不需要配置的 adb 环境变量方式，但是需要在Tool/adb文件下操作，至于如何自动跳转，只需改变执行脚本即可，这里只做演示

将代码 clone 到本地后尝试把所有代码文件拷贝到 Tool/adb文件夹下
在adb文件下操作：按住 shift + 右键 选择在该文件夹下打开命令窗口
打开安卓手机的 usb 调试，并连接电脑，在终端输入 adb devices 进行测试，如果有连接设备号则表示成功
打开微信小游戏，点击开始游戏，然后运行代码 python wechat_jump_py3.py，点击出现的图形起点和终点，棋子自动跳转
方法2. 手动配置 adb 到环境变量中
Android 或 Android 模拟器使用 ADB 进行连接
ADB 驱动，可以到这里下载
如果你是 Android + macOS，请参考下面的配置：
安装 Python 2.7/3
使用 brew 进行安装 brew cask install android-platform-tools
安装完后插入安卓设备且安卓已打开 USB 调试模式，终端输入 adb devices ，显示如下表明设备已连接
List of devices attached
6934dc33    device
部分新机型可能需要再另外勾上允许模拟点击权限
小米设备除了 USB 调试，还要打开底下的 USB 调试（安全）
USB 可能要设置成 MTP 模式
如果你是 Android + Windows，请参考下面的配置：
安装Python 2.7/3
安装 ADB 后，请在环境变量里将 adb 的安装路径保存到 PATH 变量里，确保 adb 命令可以被识别到
同 Android + macOS 测试连接
安装依赖文件
pip install -r requirements.txt
操作步骤
安卓手机打开 USB 调试，设置 > 开发者选项 > USB 调试
电脑与手机 USB 线连接，确保执行 adb devices 可以找到设备 ID
界面转至微信跳一跳游戏，点击开始游戏
进入项目目录，运行 python wechat_jump_auto.py ，如果手机弹出界面显示 USB 授权，请点击确认
请按照你的机型或手机分辨率从 ./config/ 文件夹找到相应的配置，把对应的 config.json 拷贝到项目根目录，与 *.py 同级
如果屏幕分辨率能成功探测，会直接调用 config 目录的配置，不需要复制
优先按机型去找，找不到再按分辨率
如果都没有请找一个接近的自己的分辨率，或者调节一下找到合适的参数
二、iOS 手机操作步骤
可参考：@神经嘻嘻兮兮：图文介绍iphone + macOS配置及操作

环境安装
如果你是 iOS + macOS，请参考下面的配置

使用真机调试 WDA，参考 iOS 真机如何安装 WebDriverAgent · TesterHome
安装 openatx/facebook-wda
安装依赖文件

pip install -r requirements.txt
操作步骤
运行安装好的 WebDriverAgentRunner
将手机点击到《跳一跳》小程序界面
运行脚本。有两种模式可供选择：手动辅助跳和自动连续跳
手动辅助跳
命令行运行 python3 wechat_jump_iOS_py3.py
依次点击弹出的窗口中的起始位置和目标位置，会自动计算距离后起跳
根据起跳的精准情况更改 python3 wechat_jump_iOS_py3.py 中的 time_coefficient 参数，直到获得最佳取值
自动连续跳
拷贝 ./config/iPhone 目录下对应的设备配置文件，重命名并替换到 ./config.json
命令行运行 python3 wechat_jump_auto_iOS.py
会自动计算坐标并连续起跳，根据起跳的精准情况更改 ./config.json 中的 press_coefficient 参数，直到获得最佳取值
三、虚拟环境
考虑到生产环境的规范性，实验与项目之间不受干扰，请尽量用新的虚拟环境来完成实验

MacOS/Win,请使用如下操作开辟新的虚拟环境（不强调表示MacOS/Win相同操作）

下载Anaconda. MacOS:默认安装/Win:注意安装时候勾选配置路径或者之后手动配置，直至cmd后conda关键字有效
查看所有的虚拟环境conda info --envs
使用命令：conda create -n wechat_env python=3，创建名为wechat_env的虚拟环境，且配置python版本为python3
激活虚拟环境：MacOS: source activate wechat_env/Win：activate wechat_env
安装所需要的包，比如matplotlib等，建议使用conda install package_name来避免虚拟环境包的路径问题
接下来的操作非必须，仅当实验完成后可操作，试验阶段全程在虚拟环境中操作，进入虚拟环境会有前置符号表示如：

(wechat_env) ~/Desktop/wechat_jump_game-master>
退出虚拟环境：MacOS: source deactivate wechat_env / Win: deactivate wecha_env
删除虚拟环境： conda remove -n wechat_env --all
